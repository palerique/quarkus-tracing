version: "3.7"

name: quarkus-tracing

networks:
  quarkus-tracing_network:
    driver: bridge

volumes:
  redpanda-0: null
  postgres-db:
    driver: local

services:

  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=debug
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.7
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - quarkus-tracing_network
    ports:
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "19644:9644"

  redpanda_console:
    container_name: redpanda-console
    image: docker.redpanda.com/vectorized/console:v2.2.3
    networks:
      - quarkus-tracing_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - "9080:8080"
    depends_on:
      - redpanda-0

  jaeger-all-in-one:
    container_name: jaeger-all-in-one
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    networks:
      - quarkus-tracing_network

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./opentelemetry-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z
    ports:
      - "4317:4317"   # OTLP HTTP receiver
      #      - "1888:1888"   # pprof extension
      #      - "4318:4318"   # OTLP gRPC receiver
      #      - "4320:4320"   # OTLP gRPC receiver
      #      - "8888:8888"   # Prometheus metrics exposed by the collector
      #      - "8889:8889"   # Prometheus exporter metrics
      #      - "13133:13133" # health_check extension
      #      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
    networks:
      - quarkus-tracing_network

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: sarah
      POSTGRES_PASSWORD: connor
      POSTGRES_DB: piadasdatabase
      PGDATA: /data/postgres
    volumes:
      - postgres-db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - quarkus-tracing_network

  prometheus:
    image: quay.io/prometheus/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus_scrape_configs.yml:/etc/prometheus/prometheus.yml
    networks:
      - quarkus-tracing_network

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - quarkus-tracing_network

# Logging:
  elasticsearch:
    image: docker.io/elastic/elasticsearch:7.16.3
    ports:
      - "9200:9200"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: "single-node"
    networks:
      - quarkus-tracing_network

  mongo:
    image: mongo:latest
    networks:
      - quarkus-tracing_network

  graylog:
    image: graylog/graylog:latest
    ports:
      - "9000:9000"
      - "12201:12201/udp"
      - "1514:1514"
    environment:
      GRAYLOG_HTTP_EXTERNAL_URI: "http://127.0.0.1:9000/"
      # CHANGE ME (must be at least 16 characters)!
      GRAYLOG_PASSWORD_SECRET: "forpasswordencryption"
      # Password: admin
      GRAYLOG_ROOT_PASSWORD_SHA2: "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"
    networks:
      - quarkus-tracing_network
    depends_on:
      - elasticsearch
      - mongo
