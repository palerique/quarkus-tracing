version: "3.7"

name: quarkus-tracing

networks:
  quarkus-tracing_network:
    driver: bridge

volumes:
  redpanda-0: null
  postgres-db:
    driver: local
  mongodb_data:
  os_data:
  graylog_data:
  graylog_journal:
  scylla-data:

services:
  #---------------------------------------------
  #  Application Kafka:
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=info
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.7
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - quarkus-tracing_network
    ports:
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "19644:9644"
  #---------------------------------------------
  #  Application Databases:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: sarah
      POSTGRES_PASSWORD: connor
      POSTGRES_DB: piadasdatabase
      PGDATA: /data/postgres
    volumes:
      - postgres-db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - quarkus-tracing_network
  #---------------------------------------------
  #Observability - Collector:
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./configs/opentelemetry-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z
    ports:
      - "4317:4317"   # OTLP HTTP receiver
      #      - "1888:1888"   # pprof extension
      #      - "4318:4318"   # OTLP gRPC receiver
      #      - "4320:4320"   # OTLP gRPC receiver
      #      - "8888:8888"   # Prometheus metrics exposed by the collector
      #      - "8889:8889"   # Prometheus exporter metrics
      #      - "13133:13133" # health_check extension
      #      - "55670:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
    networks:
      - quarkus-tracing_network
  #---------------------------------------------
  #Observability - Tracing:
  jaeger-all-in-one:
    container_name: jaeger-all-in-one
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    networks:
      - quarkus-tracing_network
  #---------------------------------------------
  #Observability - Metrics:
  prometheus:
    image: quay.io/prometheus/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus/prometheus_scrape_configs.yml:/etc/prometheus/prometheus.yml
    networks:
      - quarkus-tracing_network
  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./configs/grafana/data:/var/lib/grafana
      - ./configs/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./configs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - quarkus-tracing_network
  #---------------------------------------------
  #Observability - Logging:
  mongodb:
    image: "mongo:latest"
    volumes:
      - "mongodb_data:/data/db"
    restart: "on-failure"
  opensearch:
    image: "opensearchproject/opensearch:latest"
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - "os_data:/usr/share/opensearch/data"
    restart: "on-failure"
  graylog:
    hostname: "server"
    image: "graylog/graylog:5.1.0"
    depends_on:
      opensearch:
        condition: "service_started"
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_NODE_ID_FILE: "/usr/share/graylog/data/config/node-id"
      GRAYLOG_PASSWORD_SECRET: "forpasswordencryption"
      GRAYLOG_ROOT_PASSWORD_SHA2: "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"
      GRAYLOG_HTTP_BIND_ADDRESS: "0.0.0.0:9000"
      GRAYLOG_HTTP_EXTERNAL_URI: "http://localhost:9000/"
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
    ports:
      - "5044:5044/tcp"   # Beats
      - "5140:5140/udp"   # Syslog
      - "5140:5140/tcp"   # Syslog
      - "5555:5555/tcp"   # RAW TCP
      - "5555:5555/udp"   # RAW TCP
      - "9000:9000/tcp"   # Server API
      - "12201:12201/tcp" # GELF TCP
      - "12201:12201/udp" # GELF UDP
      #- "10000:10000/tcp" # Custom TCP port
      #- "10000:10000/udp" # Custom UDP port
      - "13301:13301/tcp" # Forwarder data
      - "13302:13302/tcp" # Forwarder config
    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
    restart: "on-failure"
  #---------------------------------------------
